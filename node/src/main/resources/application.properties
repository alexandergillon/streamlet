streamlet.node.id=${STREAMLET_NODE_ID}
streamlet.participants=${STREAMLET_PARTICIPANTS}
streamlet.notarization.threshold=0.66666666667

streamlet.epoch.duration=${STREAMLET_EPOCH_DURATION}

streamlet.kafka.broadcast-topic.name=broadcast

spring.kafka.consumer.group-id=nodes
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.auto-offset-reset=earliest

spring.kafka.bootstrap-servers=${STREAMLET_KAFKA_BOOTSTRAP_SERVERS}